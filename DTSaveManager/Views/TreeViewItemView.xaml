<UserControl x:Class="DTSaveManager.Views.TreeViewItemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             xmlns:viewmodels="clr-namespace:DTSaveManager.ViewModels"
             xmlns:views="clr-namespace:DTSaveManager.Views"
             xmlns:converters="clr-namespace:DTSaveManager.Converters"
             xmlns:controls="clr-namespace:DTSaveManager.Views.Custom_Controls"
             xmlns:enums="clr-namespace:DTSaveManager.DataTypes.Enums"
             xmlns:attached="clr-namespace:DTSaveManager.Views.Attached_Properties"
             mc:Ignorable="d" 
             d:DesignHeight="40" d:DesignWidth="400">

    <UserControl.Resources>
        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}"/>
        <viewmodels:TreeViewItemViewModel x:Key="treeViewItemViewModel"/>

        <converters:MultipleValuesConverter x:Key="multipleValuesConverter"/>
        <converters:MessageTypeToColorValueConverter x:Key="messageTypeToColorValueConverter"/>
        <converters:BooleanToVisibilityValueConverter x:Key="booleanToVisibilityValueConverter"/>
        <converters:BooleanToColorMultiValueConverter x:Key="booleanToColorMultiValueConverter"/>
        <converters:InverseBooleanValueConverter x:Key="inverseBooleanValueConverter"/>
        <converters:IsActiveToIsEnabledMultiValueConverter x:Key="isActiveToIsEnabledMultiValueConverter"/>
        <converters:BooleanToFontWeightValueConverter x:Key="booleanToFontWeightValueConverter"/>
    </UserControl.Resources>

    <Border d:Background="{DynamicResource ActiveSaveFileBrush}" Background="{DynamicResource DTForegroundSecondaryBrush}" CornerRadius="5" Padding="0 0 7 0" Margin="0 3 0 3">

        <Grid MaxWidth="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=ActualWidth}" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border Grid.ColumnSpan="10" Margin="0 0 -7 0" CornerRadius="5 5 5 5">
                <Border.Background>
                    <MultiBinding Converter="{StaticResource booleanToColorMultiValueConverter}">
                        <Binding Path="Active"/>
                        <Binding Path="DataContext.CurrentTheme" UpdateSourceTrigger="PropertyChanged" RelativeSource="{RelativeSource AncestorType=views:MainWindow}"/>
                    </MultiBinding>
                </Border.Background>
            </Border>

            <Button FontSize="{StaticResource FontSizeRegular}" Grid.Column="0" Margin="11 1 0 0" FontFamily="{StaticResource FontAwesome}" 
                    HorizontalAlignment="Right">
                <Button.Style>
                    <Style BasedOn="{StaticResource BorderlessActionButton}" TargetType="{x:Type Button}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLocked}" Value="True">
                                <Setter Property="Command" Value="{Binding UnlockCommand}"/>
                                <Setter Property="Content" Value="&#xf023;"/>
                                <Setter Property="Button.ToolTip">
                                    <Setter.Value>
                                        <ToolTip attached:ToolTipProperties.Foreground="{DynamicResource TextBrush}" attached:ToolTipProperties.Padding="6 2 6 2" attached:ToolTipProperties.Color="{DynamicResource DTTitleBarBrush}" attached:ToolTipProperties.Text="Unlock File"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsLocked}" Value="False">
                                <Setter Property="Command" Value="{Binding LockCommand}"/>
                                <Setter Property="Content" Value="&#xf09c;"/>
                                <Setter Property="Button.ToolTip">
                                    <Setter.Value>
                                        <ToolTip attached:ToolTipProperties.Foreground="{DynamicResource TextBrush}" attached:ToolTipProperties.Padding="6 2 6 2" attached:ToolTipProperties.Color="{DynamicResource DTTitleBarBrush}" attached:ToolTipProperties.Text="Lock File"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <controls:EditableLabelTextBox d:Value="Testing" Grid.Column="1" x:Name="EditableLabelTextBox" Style="{StaticResource BaseEditableLabelTextBox}" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                            Margin="3 0 0 1" Padding="0 0 0 0" IsEditing="{Binding IsEditing}" LostFocusCommand="{Binding RenameMetadataCommand}" 
                                            Value="{Binding DisplayName}" Command="{Binding ChangeActiveCommand}" FontWeight="{Binding Active, Converter={StaticResource booleanToFontWeightValueConverter}}"
                                            LostFocusCommandParameter="{Binding Path=Value, RelativeSource={RelativeSource Self}}" Focused="{Binding IsFocused}"/>
            <Label Padding="2 0 2 0" d:Content="Message" Grid.Column="2" Content="{Binding MessageText}"
                   FontSize="{StaticResource FontSizeRegular}"
                   Foreground="{Binding CurrentMessageType, Converter={StaticResource messageTypeToColorValueConverter}}" 
                   VerticalAlignment="Center" HorizontalAlignment="Right"
                   Visibility="{Binding ShowMessage, Converter={StaticResource booleanToVisibilityValueConverter}}"
                   Margin="5 0 5 0">
                <Label.Background>
                    <MultiBinding Converter="{StaticResource booleanToColorMultiValueConverter}">
                        <Binding Path="Active"/>
                        <Binding Path="DataContext.CurrentTheme" UpdateSourceTrigger="PropertyChanged" RelativeSource="{RelativeSource AncestorType=views:MainWindow}"/>
                    </MultiBinding>
                </Label.Background>

            </Label>
            <Button FontSize="{StaticResource FontSizeLarge}" Grid.Column="3" Margin="5 0 5 0" FontFamily="{StaticResource FontAwesome}" 
                    Content="&#xf14a;" Command="{Binding ChangeActiveCommand}"
                    HorizontalAlignment="Right" Style="{StaticResource BorderlessActionButton}"
                    IsEnabled="{Binding Active, Converter={StaticResource inverseBooleanValueConverter}}">

                <Button.ToolTip>
                    <ToolTip attached:ToolTipProperties.Foreground="{DynamicResource TextBrush}" attached:ToolTipProperties.Padding="6 2 6 2" attached:ToolTipProperties.Color="{DynamicResource DTTitleBarBrush}" attached:ToolTipProperties.Text="Set as Active File"/>
                </Button.ToolTip>
            </Button>
            <Button FontSize="{StaticResource FontSizeLarge}" Grid.Column="4" Margin="5 0 5 0" Style="{StaticResource BorderlessActionButton}" FontFamily="{StaticResource FontAwesome}" 
                    Content="&#xf14b;" Command="{Binding FocusTextBoxCommand}"
                    HorizontalAlignment="Right"
                    IsEnabled="{Binding IsLocked, Converter={StaticResource inverseBooleanValueConverter}}">

                <Button.ToolTip>
                    <ToolTip attached:ToolTipProperties.Foreground="{DynamicResource TextBrush}" attached:ToolTipProperties.Padding="6 2 6 2" attached:ToolTipProperties.Color="{DynamicResource DTTitleBarBrush}" attached:ToolTipProperties.Text="Rename"/>
                </Button.ToolTip>
            </Button>
            <Button FontSize="{StaticResource FontSizeRegular}" Grid.Column="5" Margin="5 0 5 0" Style="{StaticResource BorderlessActionButton}" FontFamily="{StaticResource FontAwesome}" 
                    Content="&#xf24d;" Command="{Binding DuplicateCommand}" HorizontalAlignment="Right">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseDown">
                        <i:InvokeCommandAction Command="{Binding HidePopupCommand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeave">
                        <i:InvokeCommandAction Command="{Binding DisplayPopupCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                
                <Button.ToolTip>
                    <ToolTip attached:ToolTipProperties.Foreground="{DynamicResource TextBrush}" attached:ToolTipProperties.Padding="6 2 6 2" attached:ToolTipProperties.Color="{DynamicResource DTTitleBarBrush}" Visibility="{Binding ShowPopup, Converter={StaticResource booleanToVisibilityValueConverter}}" attached:ToolTipProperties.Text="Duplicate"/>
                </Button.ToolTip>
            </Button>
            <ToggleButton FontSize="{StaticResource FontSizeLarge}" Grid.Column="6" Margin="5 0 5 0" Style="{StaticResource BorderlessDeleteToggleButton}" FontFamily="{StaticResource FontAwesome}" 
                          Content="&#x58;" Command="{Binding DisplayMessageCommand}" HorizontalAlignment="Right">
                <ToggleButton.IsEnabled>
                    <MultiBinding Converter="{StaticResource isActiveToIsEnabledMultiValueConverter}">
                        <Binding Path="Active"/>
                        <Binding Path="IsLocked"/>
                    </MultiBinding>
                </ToggleButton.IsEnabled>

                <ToggleButton.ToolTip>
                    <ToolTip attached:ToolTipProperties.Foreground="{DynamicResource TextBrush}" attached:ToolTipProperties.Padding="6 2 6 2" attached:ToolTipProperties.Color="{DynamicResource DTTitleBarBrush}" attached:ToolTipProperties.Text="Delete"/>
                </ToggleButton.ToolTip>

                <ToggleButton.CommandParameter>
                    <MultiBinding Converter="{StaticResource multipleValuesConverter}">
                        <Binding Source="{x:Static enums:MessageType.DeletionMessage}"/>
                        <Binding>
                            <Binding.Source>
                                <s:Boolean>false</s:Boolean>
                            </Binding.Source>
                        </Binding>
                    </MultiBinding>
                </ToggleButton.CommandParameter>

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Unchecked">
                        <i:InvokeCommandAction Command="{Binding ClearMessageCommand}" CommandParameter="{x:Static enums:MessageType.DeletionMessage}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Indeterminate">
                        <i:InvokeCommandAction Command="{Binding RemoveCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

            </ToggleButton>
        </Grid>
    </Border>

</UserControl>
